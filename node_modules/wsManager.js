// this is a comment
module.exports = {
    saveUser: function(msgObj,ewd) {
        var target;
        var notify;
        var global = new ewd.mumps.GlobalNode('%zewd',['EWDLiteServiceAccessId']);
        global._setDocument(msgObj.obj);
        if (msgObj.isEdit === true) {
            notify = "User Edited!";
        }
        else {
            notify = "User Saved!";
        }
        return notify;
    },
    
    getUsers: function(ewd) {
        var global = new ewd.mumps.GlobalNode('%zewd',['EWDLiteServiceAccessId']);
        var userObj = global._getDocument();
        ewd.sendWebSocketMsg({
            type: 'getUsers',
            message: userObj
        });
    },
    
    deleteUser: function(msgObj, ewd) {
        var global = new ewd.mumps.GlobalNode('%zewd',['EWDLiteServiceAccessId', msgObj.target]);
        global._delete();
        if (msgObj.isEdit !== true) {
            msgObj.isEdit = "false";
        }
        return msgObj.isEdit;
    },
    
    onSocketMessage: function(ewd) {

        var wsMsg = ewd.webSocketMessage;
        var type = wsMsg.type;
        var params = wsMsg.params;
        var sessid = ewd.session.$('ewd_sessid')._value;


        if (type === 'EWD.form.login') {
          if (params.username === '') return 'You must enter a username';
          if (params.password === '') return 'You must enter a password';
          // optional validation logic
          //if (params.username !== 'customUsername') return 'Invalid login';
          //if (params.password !== 'customPass') return 'Invalid login';

          // validation using ewd password
          if (params.password !== ewd.session.$('ewd_password')._value) return 'Invalid password';
          
          // ====================

          ewd.session.setAuthenticated();

          ewd.sendWebSocketMsg({
            type: 'loggedInAs',
            message: {
              fullName: params.username, // change for proper registered name
            }
          });
          return ''; 
        }

        if (!ewd.session.isAuthenticated) return;

        if (type === 'saveUser') {
            return this.saveUser(wsMsg.params, ewd);
        }
        
        if (type === 'deleteUser'){
            return this.deleteUser(wsMsg.params, ewd);
        }
        
        if (type === 'getUsers') {
            this.getUsers(ewd);
        }
        
    }
};



